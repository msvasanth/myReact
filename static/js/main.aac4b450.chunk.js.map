{"version":3,"sources":["components/toggle.js","common/utility.js","common/search.js","components/tag-entities.js","components/content.js","components/sub-filter.js","components/filter.js","App.js","serviceWorker.js","index.js"],"names":["Toggle","props","react_default","a","createElement","className","Utility","React","Component","decodeBase64","s","i","x","e","b","l","r","w","String","fromCharCode","L","length","charAt","Search","onSearchButtonClick","inputText","target","offsetParent","children","item","value","replace","alert","onTagButtonClick","tagEntities","tagData","tags","classInfo","iskeyPhrase","map","tag","index","key","onClick","search","MainContent","filePath","decodedPath","window","open","fileNameWithExtn","ext","toLowerCase","trimEnd","substring","lastIndexOf","indexOf","contentKey","objValue","_this","this","isImageFile","metadata_storage_name","alt","onError","src","metadata_storage_path","merged_content","_this2","myData","myContent","Object","keys","onclickTitle","toUpperCase","renderFileContent","tag_entities","ImageTags","Keyphrases","filterContents","filterKey","uniqueArray","masterData","rawArray","masterFilters","subFilters","push","uniqueSet","Set","Array","from","removeDuplicates","uniqueFilters","type","id","name","event","element","currentElement","document","getElementById","classList","contains","remove","add","onclickFilters","filterEntity","filterConfig","internalName","displayName","sub_filter","App","_useState","useState","_useState2","slicedToArray","testData","toggle","placeholder","filter","content","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4hBAQiBA,MAPjB,SAAgBC,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qDCHnBC,wIAAgBC,IAAMC,WAAtBF,EAEKG,aAAe,SAASC,GAC3B,IAASC,EAAQC,EAAMT,EAAnBU,EAAE,GAAKC,EAAE,EAAMC,EAAE,EAAIC,EAAE,GAAGC,EAAEC,OAAOC,aAAaC,EAAEV,EAAEW,OAExD,IAAIV,EAAE,EAAEA,EAAE,GAAGA,IAAKE,EADZ,mEACgBS,OAAOX,IAAIA,EACjC,IAAIC,EAAE,EAAEA,EAAEQ,EAAER,IAER,IADiBE,GAAGA,GAAG,GAArBD,EAAEH,EAAEY,OAAOV,IAAeG,GAAG,EACzBA,GAAG,KAAKZ,EAAGW,KAAKC,GAAG,GAAI,MAAQH,EAAGQ,EAAE,KAAOJ,GAAGC,EAAEd,IAE1D,OAAOa,GAGAV,QCbTiB,wIAAehB,IAAMC,WAArBe,EACKC,oBAAsB,SAASX,GAClC,IAAIY,EAAYZ,EAAEa,OAAOC,aAAaC,SAASC,KAAK,IACpChB,EAAEa,OAAOC,aAAaC,SAASC,KAAK,GACN,MAA1CJ,EAAUK,OAAO,IAAIC,QAAQ,MAAO,IAEpCC,MAAM,8BAINA,MAAMP,EAAUK,QAVtBP,EAcKU,iBAAmB,SAASpB,GAC/B,IAAIY,EAAYZ,EAAEa,OAASb,EAAEa,OAAOI,MAAQ,GAC5CE,MAAMP,IAGCF,QCNEW,MAZjB,SAAqBjC,GACjB,IAAMkC,EAAUlC,EAAMmC,KAClBC,EAAYpC,EAAMqC,YAAc,kCAAoC,mBACpE,OACIpC,EAAAC,EAAAC,cAAA,SACC+B,EAAQI,IAAI,SAACC,EAAIC,GAAL,OACTvC,EAAAC,EAAAC,cAAA,UAAQsC,IAAK,MAAMD,EAAOpC,UAAWgC,EAAWP,MAAOU,EACvDG,QAAS,SAAC9B,GAAD,OAAK+B,EAAOX,iBAAiBpB,KAAK2B,OC8C5CK,uLAnDEC,EAASjC,GAClB,IAAIkC,EAAczC,EAAQG,aAAaqC,GACvCE,OAAOC,KAAKF,EAAY,8CAEhBG,GAER,IACIC,GAFJD,GAAoBA,GAAoB,IAAIE,cAAcC,WAE/BC,UAAUJ,EAAiBK,YAAY,KAAK,GACvE,MAFyB,CAAE,OAAQ,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,QAExEC,QAAQL,IAAQ,4CAE7BM,EAAWC,GAC7B,IAAAC,EAAAC,KACI,OAAGA,KAAKC,YAAYH,EAASI,uBAElB5D,EAAAC,EAAAC,cAAA,OAAKsC,IAAK,UAAUe,EAAYM,IAAI,GAAGC,QAAU,WAEpDL,EAAKM,IAAI,0BACV5D,UAAU,aACV4D,IAAK3D,EAAQG,aAAaiD,EAASQ,yBAI/BhE,EAAAC,EAAAC,cAAA,OAAKsC,IAAK,UAAUe,EAAYpD,UAAU,eAAeqD,EAASS,iDAGxE,IAAAC,EAAAR,KACDS,EAAST,KAAK3D,MAAMqE,UAAUxC,OAAS,GAC3C,OACI5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEPkE,OAAOC,KAAKH,GAAQ9B,IAAI,SAACkB,GACrB,IAAMC,EAAWW,EAAOZ,GACxB,OACIvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOqC,IAAK,OAAOe,GAC9BvD,EAAAC,EAAAC,cAAA,MAAIsC,IAAK,KAAKe,EAAYd,QAAS,SAAC9B,GAAD,OAAOuD,EAAKK,aAAaf,EAASQ,sBAAuBrD,MAC1F6C,EAASI,uBAAyB,IAAI/B,QAAQ,aAAa,IAAI2C,eAChEN,EAAKO,kBAAkBlB,EAAWC,GACnCxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeqC,IAAK,iBAAiBe,GAChDvD,EAAAC,EAAAC,cAACwE,EAAD,CAAMlC,IAAK,SAASe,EAAYnB,aAAa,EAAOF,KAAMsB,EAASmB,YACvE3E,EAAAC,EAAAC,cAAA,OAAKsC,IAAK,iBAAiBe,GACvBvD,EAAAC,EAAAC,cAACwE,EAAD,CAAMlC,IAAK,eAAee,EAAYnB,aAAa,EAAMF,KAAMsB,EAASoB,0BAzClFvE,IAAMC,mBCmCjBuE,MArCf,SAAwB9E,GACpB,IAAI+E,EAAY/E,EAAM+E,UAElBC,EAeR,SAA0BC,EAAWF,GAEjC,IAAIG,EAAW,GACfD,EAAW3C,IAAI,SAAC6C,GAAD,OACXA,EAAcJ,GAAWzC,IAAI,SAAC8C,EAAW5C,GAAZ,OACzB0C,EAASG,KAAKD,OAGtB,IAAME,EAAY,IAAIC,IAAIL,GAC1B,OAAOM,MAAMC,KAAKH,IAAc,GAxBdI,CADD1F,EAAMqE,UAAUxC,OAAS,GACIkD,GAC9C,OACI9E,EAAAC,EAAAC,cAAA,OAAKsC,IAAK,WAAWsC,GACpBC,EAAY1C,IAAI,SAACqD,EAAcnD,GAAf,OACRvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcqC,IAAK,eAAesC,EAAU,IAAIvC,GAC5DvC,EAAAC,EAAAC,cAAA,SAAOsC,IAAK,YAAYD,EAAOoD,KAAK,WAAWxF,UAAU,sBACzDH,EAAAC,EAAAC,cAAA,SAAO0F,IAAKd,GAAa,IAAI,IAAIvC,EAAOC,IAAK,YAAYD,EAAOpC,UAAU,qBAC1E0F,KAAK,YAAYpD,QAAS,SAAC9B,GAAD,OAmB9C,SAAwBwE,EAAYW,EAAOC,GACvC,IAAIC,EAAiBC,SAASC,eAAeH,GAE7CC,EAAeG,UAAUC,SADP,cAENJ,EAAeG,UAAUE,OAFnB,cAEyCL,EAAeG,UAAUG,IAFlE,cAGlBxE,MAAMqD,GAxB2CoB,CAAeb,EAAe/E,GAAImE,GAAa,IAAI,IAAIvC,KACpFvC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAWqC,IAAK,aAAaD,GAAQmD,SCI9Dc,MAbf,SAAsBzG,GACd,OACIC,EAAAC,EAAAC,cAAA,OAAK0F,GAAG,YAAYpD,IAAI,gBACvBiE,EAAapE,IAAI,SAACC,EAAIC,GAAL,OACdvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcyF,GAAI,gBAAgBrD,EAAOC,KAAMF,EAAIoE,cAAgB,IAAIxD,cAAc,WACpGlD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAeqC,IAAK,UAAUF,EAAIoE,eAAgBpE,EAAIqE,aAAe,IAAInC,eACpFxE,EAAAC,EAAAC,cAAC0G,EAAD,CAAY9B,UAAWxC,EAAIoE,aAActC,UAAWrE,EAAMqE,iBCoD9DyC,MAhDf,WAAe,IAAAC,EACkBC,mBAAS3C,GAD3B4C,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,GACNI,EADMF,EAAA,GAeb,OAfaA,EAAA,GAgBXhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAACiH,EAAD,MACAnH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAElBH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,WACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAawF,KAAK,OAAOE,KAAK,GAAGuB,YAAY,WAC9DpH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAesC,QAAS,SAAC9B,GAAD,OAAK+B,EAAOpB,oBAAoBX,KACtEX,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,YAKNH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAEjBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACZH,EAAAC,EAAAC,cAACmH,EAAD,CAAejD,UAAW8C,MAG5BlH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAEVH,EAAAC,EAAAC,cAACoH,EAAD,CAASlD,UAAW8C,KAE1BlH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAf,oBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAf,oCC3CQoH,QACW,cAA7BzE,OAAO0E,SAASC,UAEe,UAA7B3E,OAAO0E,SAASC,UAEhB3E,OAAO0E,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5H,EAAAC,EAAAC,cAAC2H,EAAD,MAAS5B,SAASC,eAAe,SD2H3C,kBAAmB4B,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.aac4b450.chunk.js","sourcesContent":["import React from 'react'\r\nfunction Toggle(props) {\r\n    return (\r\n        <div className=\"menu-icon\">\r\n            <i className=\"fa fa-bars\"></i>\r\n        </div>\r\n    );\r\n  }\r\n  export default Toggle;","import React from 'react'\r\nclass Utility extends React.Component {\r\n    //Decode Base64 String\r\n    static decodeBase64 = function(s) {\r\n        var e={},i,b=0,c,x,l=0,a,r='',w=String.fromCharCode,L=s.length;\r\n        var A=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n        for(i=0;i<64;i++){e[A.charAt(i)]=i;}\r\n        for(x=0;x<L;x++){\r\n            c=e[s.charAt(x)];b=(b<<6)+c;l+=6;\r\n            while(l>=8){((a=(b>>>(l-=8))&0xff)||(x<(L-2)))&&(r+=w(a));}\r\n        }\r\n        return r;\r\n    };\r\n}\r\nexport default Utility;\r\n","import React from 'react'\r\nclass Search extends React.Component {\r\n    static onSearchButtonClick = function(e) {\r\n        let inputText = e.target.offsetParent.children.item(0) ||\r\n                        e.target.offsetParent.children.item[0]\r\n        if((inputText.value||\"\").replace(/\\s/g, '')===\"\")\r\n        {\r\n            alert(\"Enter valid Text to search\");\r\n        }\r\n        else\r\n        {\r\n            alert(inputText.value);\r\n        }\r\n    };\r\n\r\n    static onTagButtonClick = function(e) {\r\n        let inputText = e.target ? e.target.value : \"\";\r\n        alert(inputText);\r\n    };\r\n}\r\nexport default Search;","import React from 'react';\r\nimport search from '../common/search';\r\nfunction tagEntities(props) {   \r\n    const tagData = props.tags;    \r\n    let classInfo = props.iskeyPhrase ? \"tag tag-entities tag-keyphrases\" : \"tag tag-entities\";\r\n        return (  \r\n            <p>          \r\n            {tagData.map((tag,index) => (\r\n                <button key={\"tag\"+index} className={classInfo} value={tag}\r\n                onClick={(e)=>search.onTagButtonClick(e)}>{tag}</button>\r\n            ))}\r\n            </p>\r\n        );\r\n    }\r\n  export default tagEntities;","import React from 'react'\r\nimport Utility from '../common/utility'\r\nimport Tags from './tag-entities'\r\nclass MainContent extends React.Component {\r\n    onclickTitle(filePath,e) {\r\n        let decodedPath = Utility.decodeBase64(filePath);\r\n        window.open(decodedPath,\"_blank\");\r\n    }\r\n    isImageFile(fileNameWithExtn){\r\n        fileNameWithExtn = (fileNameWithExtn || \"\").toLowerCase().trimEnd();\r\n        var fileExtensionArray = [ \"jpeg\", \"jpg\", \"gif\", \"png\", \"tiff\", \"bmp\", \"ppm\", \"pgm\", \"pbm\", \"pnm\", \"jfif\"];\r\n        var ext = fileNameWithExtn.substring(fileNameWithExtn.lastIndexOf(\".\")+1);\r\n        return (fileExtensionArray.indexOf(ext) > -1) ? true : false;\r\n     }\r\n    renderFileContent(contentKey,objValue)\r\n    {\r\n        if(this.isImageFile(objValue.metadata_storage_name))\r\n        {\r\n            return <img key={\"MainDiv\"+contentKey} alt=\"\" onError={ ()=>{\r\n                //console.log(\"hello\"+contentKey)\r\n                this.src='../images/Pattern9.jpg'}\r\n            }  className=\"img-result\"\r\n               src={Utility.decodeBase64(objValue.metadata_storage_path)} />\r\n        }\r\n        else\r\n        {\r\n            return <div key={\"MainDiv\"+contentKey} className=\"fileContent\">{objValue.merged_content}</div>;\r\n        }\r\n    }\r\n    render() {\r\n        let myData = this.props.myContent.value || [];\r\n        return (\r\n            <div className=\"main-cards\">\r\n                {                    \r\n                    Object.keys(myData).map((contentKey) => {\r\n                        const objValue = myData[contentKey];\r\n                        return (\r\n                            <div className=\"card\" key={\"card\"+contentKey}>\r\n                                <h4 key={\"h4\"+contentKey} onClick={(e) => this.onclickTitle(objValue.metadata_storage_path, e)} >\r\n                                {(objValue.metadata_storage_name || \"\").replace(/\\.[^/.]+$/, \"\").toUpperCase()}</h4>\r\n                                {this.renderFileContent(contentKey,objValue)}                                \r\n                                <div className=\"tagContainer\" key={\"tagContainer-1\"+contentKey}>\r\n                                    <Tags key={\"imgTag\"+contentKey} iskeyPhrase={false} tags={objValue.ImageTags}></Tags>\r\n                                <div key={\"tagContainer-2\"+contentKey}>\r\n                                    <Tags key={\"keyPhraseTag\"+contentKey} iskeyPhrase={true} tags={objValue.Keyphrases}></Tags>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })\r\n                } \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MainContent","import React from 'react'\r\nfunction filterContents(props) { \r\n    let filterKey = props.filterKey;   \r\n    let masterData = props.myContent.value || [];  \r\n    let uniqueArray = removeDuplicates(masterData,filterKey);\r\n    return (  \r\n        <div key={\"extraDiv\"+filterKey}>          \r\n        {uniqueArray.map((uniqueFilters,index) => (\r\n                 <div className=\"ms-CheckBox\" key={\"ms-CheckBox_\"+filterKey+\"_\"+index}>\r\n                    <input key={\"filterChk\"+index} type=\"checkbox\" className=\"ms-CheckBox-input\"/>\r\n                    <label id={(filterKey || \"\")+\"_\"+index} key={\"filterlbl\"+index} className=\"ms-CheckBox-field \"  \r\n                    name=\"checkboxa\" onClick={(e) => onclickFilters(uniqueFilters, e, (filterKey || \"\")+\"_\"+index)}>\r\n                        <span className=\"ms-Label\" key={\"filterSpan\"+index}>{uniqueFilters}</span> \r\n                    </label>\r\n                </div> \r\n        ))}\r\n        </div>\r\n    );\r\n}\r\nfunction removeDuplicates(masterData,filterKey)\r\n{\r\n    let rawArray = [];\r\n    masterData.map((masterFilters) => (\r\n        masterFilters[filterKey].map((subFilters,index) => (\r\n            rawArray.push(subFilters)\r\n        ))\r\n    ));\r\n    const uniqueSet = new Set(rawArray);\r\n    return Array.from(uniqueSet) || [];\r\n}\r\nfunction onclickFilters(subFilters, event, element){\r\n    var currentElement = document.getElementById(element);\r\n    var activeClass = \"is-checked\";\r\n    currentElement.classList.contains(activeClass) ? \r\n                currentElement.classList.remove(activeClass) : currentElement.classList.add(activeClass);\r\n    alert(subFilters);\r\n}\r\n\r\nexport default filterContents;","import React from 'react'\r\nimport filterConfig from '../config/filterConfig.json'\r\nimport Subfilters  from './sub-filter'\r\nfunction filterEntity(props) {\r\n        return (  \r\n            <div id=\"facet-nav\" key=\"filterMaster\">          \r\n            {filterConfig.map((tag,index) => (\r\n                <div className=\"filter-list\" id={\"filterSection\"+index} key={(tag.internalName || \"\").toLowerCase()+\"-facets\"}>\r\n                <h5 className=\"facet-header\" key={\"filter_\"+tag.internalName}>{(tag.displayName || \"\").toUpperCase()}</h5>\r\n                   <Subfilters filterKey={tag.internalName} myContent={props.myContent}></Subfilters>\r\n                </div>\r\n            ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default filterEntity;\r\n","import React,{useState,useEffect} from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport './css/font-awesome.min.css';\nimport './css/layout.css';\nimport myContent from './azure-searchresults.json';\nimport './components/toggle';\nimport Toggle from './components/toggle';\nimport Content from './components/content';\nimport Filtercontent from './components/filter';\nimport search from './common/search';\nlet testData = myContent || [];\n\nfunction App() {\n  const [testData, updateData] = useState(myContent);\n  // const updateData =() =>{\n  //   onClickTest(testData=myContent)      \n  // }\n  // useEffect(()=>{\n  //   axios.get('https://jsonplaceholder.typicode.com/posts')\n  //   .then((res)=>{\n  //     console.log(res);\n  //   }).catch(\n  //     err=>{\n  //       console.log(err);\n  //     }\n  //   )\n  // },[testData])\n  return (    \n    <div className=\"grid-container\">\n        <Toggle></Toggle>\n        <header className=\"header\">\n        </header>\n        <aside className=\"sidenav\">\n        <div className=\"searchBox\">\n          <input className=\"searchInput\"type=\"text\" name=\"\" placeholder=\"Search\" />\n          <button className=\"searchButton\" onClick={(e)=>search.onSearchButtonClick(e)}>\n              <i className=\"material-icons\">\n                  search\n              </i>\n          </button>\n        </div>\n        <div className=\"sidenav__close-icon\">\n            <i className=\"fa fa-times\"></i>\n        </div>\n        <ul className=\"sidenav__list\">\n          <Filtercontent myContent={testData}></Filtercontent>\n        </ul>\n        </aside>\n        <main className=\"main\">  \n              {/* <input type=\"button\" value=\"test\" onClick={()=>updateData(myContent)}/>           */}\n              <Content myContent={testData}></Content>\n        </main>\n        <footer className=\"footer\">\n            <div className=\"footer__copyright\">&copy; 2019 SP COE</div>\n            <div className=\"footer__signature\">Made with love by pure genius</div>\n        </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}